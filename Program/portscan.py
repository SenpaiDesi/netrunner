import subprocess
import sys
from datetime import date, datetime
from socket import *
from colorama import Fore
import os
from tqdm import tqdm
import main

def scan():
    global openports
    #Ask for input
    remoteServer = input("Enter a remote host to scan: ")
    filename = input("Enter name to give to the file:")
    max_ports = input("Enter the max amount of ports you wish to scan. if None then it will scan from 0 to 1000:")
    remoteServerIP = gethostbyname(remoteServer)
    if max_ports is None:
        max_ports = 1001
    elif max_ports == "":
        max_ports = 1001

    # time and information
    current_time = datetime.now()
    print(Fore.RESET + "\n")
    with open(f"./Program/scan_res/{filename}.txt", 'a') as f:
        f.write(f"Port scan results for {remoteServerIP}\nDate started: {datetime.now()}\nOpen ports: \n")

    try:
        # Defining ports using range()
        # Error handeling included

        # will scan ports between 1 to 1000
        for port in tqdm(range(1, int(max_ports)), desc=f"Scanning..", unit=" ports"):
            s = socket(AF_INET, SOCK_STREAM)
            setdefaulttimeout(0.05)
         
            # scan
            openports = []
            result = s.connect_ex((remoteServerIP,port))
            if result ==0:
                print(Fore.GREEN + "\nPort {} is open".format(port))
                print(Fore.RESET + "\n")
                with open(f"./Program/scan_res/{filename}.txt", 'a') as f:
                    f.write(f"   - {port}\n")
            s.close()
        with open(f"./Program/scan_res/{filename}.txt", 'a') as f:
            f.write(f"*" * 52 + "\nReport generated by Netrunner.\n" + "*" * 52)

    except KeyboardInterrupt:
        print("\n Exiting program.")
        sys.exit()
    except gaierror:
        print("\n Hostname could not be resolved.")
        sys.exit()
    except error:
        print("\n Server is not responding.")
        sys.exit()

    #check time again
    current_time_two = datetime.now()

    # Calculate elapsed time
    elapsed_time = current_time_two - current_time
    print(Fore.GREEN + f"Saved the results to Program/scan_res/{filename}")
    os.system('sleep 5')
    main.main()
if __name__ == "__main__":
    scan()